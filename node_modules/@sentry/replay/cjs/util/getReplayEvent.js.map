{"version":3,"file":"getReplayEvent.js","sources":["../../../../src/util/getReplayEvent.ts"],"sourcesContent":["import { Scope } from '@sentry/core';\nimport { Client, Event } from '@sentry/types';\n\nexport async function getReplayEvent({\n  client,\n  scope,\n  replayId: event_id,\n  event,\n}: {\n  client: Client;\n  scope: Scope;\n  replayId: string;\n  event: Event;\n}): Promise<Event | null> {\n  // XXX: This event does not trigger `beforeSend` in SDK\n  // @ts-ignore private api\n  const preparedEvent: Event | null = await client._prepareEvent(event, { event_id }, scope);\n\n  if (preparedEvent) {\n    // extract the SDK name because `client._prepareEvent` doesn't add it to the event\n    const metadata = client.getOptions() && client.getOptions()._metadata;\n    const { name } = (metadata && metadata.sdk) || {};\n\n    preparedEvent.sdk = {\n      ...preparedEvent.sdk,\n      version: __SENTRY_REPLAY_VERSION__,\n      name,\n    };\n  }\n\n  return preparedEvent;\n}\n"],"names":[],"mappings":";;AAGA,eAAA,cAAA,CAAA;AACA,EAAA,MAAA;AACA,EAAA,KAAA;AACA,EAAA,QAAA,EAAA,QAAA;AACA,EAAA,KAAA;AACA,CAAA;;AAKA,EAAA;AACA;AACA;AACA,EAAA,MAAA,aAAA,GAAA,MAAA,MAAA,CAAA,aAAA,CAAA,KAAA,EAAA,EAAA,QAAA,EAAA,EAAA,KAAA,CAAA,CAAA;AACA;AACA,EAAA,IAAA,aAAA,EAAA;AACA;AACA,IAAA,MAAA,QAAA,GAAA,MAAA,CAAA,UAAA,EAAA,IAAA,MAAA,CAAA,UAAA,EAAA,CAAA,SAAA,CAAA;AACA,IAAA,MAAA,EAAA,IAAA,EAAA,GAAA,CAAA,QAAA,IAAA,QAAA,CAAA,GAAA,KAAA,EAAA,CAAA;AACA;AACA,IAAA,aAAA,CAAA,GAAA,GAAA;AACA,MAAA,GAAA,aAAA,CAAA,GAAA;AACA,MAAA,OAAA,EAAA,QAAA;AACA,MAAA,IAAA;AACA,KAAA,CAAA;AACA,GAAA;AACA;AACA,EAAA,OAAA,aAAA,CAAA;AACA;;;;"}